git - software

github - services

version control system - track files on file change

commands:

git --version

git status

git init

git add

git commit

git log

git log --oneline

git config --global user.name

git config --global user.email

git config --global core.editor "code --wait" //for opening vs code editor as default editor

git branch <branch_name>

git switch -c <branch_name>

git checkout <branch_name>

git branch -d <branch_name>

------------------------------
important git file: .gitignore //for protecting environment files or any other files that are much important(.env files) 
------------------------------

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git command flow:

write the file -> add the file -> commit the file 

---------------------------------------------------------------------------------
Working Dir -> git add -> staging area -> git commit -> repo -> git push -> github
---------------------------------------------------------------------------------

----------------------------
Behind the scenes of commit:
----------------------------


----------                                                                     -----------------
new hash                                                                        previous  hash

parent            <- new hash commit is always created by previous hash         previous parent

info                                                                            previous info
----------                                                                     -----------------

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git merge and git conflicts:
#--------------------------#

Creating Branches: 

git branch <branch_name>

Moving to that Branch:

git checkout <branch_name>

Default Editor:

git config --global core.editor "code --watch" (to make vs code as default editor)

Conflict resolvers:
#-----------------#

git diff --staged (to differentiate file before staging and after staging)
Ex: Indicators (---- => for file before staging and ++++ => for file after staging)

git stash -> (pause the branch your working on and get to other branch do your Immediate work and commit it get back to stashed branch and work again)

git stash pop -> (to start working with paused branch)

git stash list -> (to list out staged branches and work on respective branch you want)
